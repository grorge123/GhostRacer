{"version":3,"sources":["users.js","posts.js","blockchain/bcpost.js","blockchain/uploadfile.js","admin/posts.js","loginProvider.js","addUploadFeature.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","PostList","props","react_default","a","createElement","List","Object","assign","title","Datagrid","rowClick","TextField","source","label","EditButton","DeleteButton","PostCreate","Create","SimpleForm","TextInput","FileInput","multiple","accept","FileField","PostEdit","Edit","disabled","PostShow","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","loading","data","PostTitle","_ref","record","tag","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","setState","stop","Show","SimpleShowLayout","UrlField","className","ReferenceField","reference","linkType","bcList","SimpleArray","_ref2","imghashs","hashs","_ref2$record","map","imghash","index","toString","href","defaultProps","addLabel","bcShow","hash","PostShowActions","_ref3","basePath","resource","CardActions","style","cardActionStyle","Button","color","onClick","len","x","window","alert","abrupt","failure","Gethash","bind","assertThisInitialized","_callee2","_context2","ms","Promise","resolve","setTimeout","c","i","h","im","b","then","status","text","DOMParser","parseFromString","getElementById","innerHTML","split","_ref5","id","actions","bcpost_SimpleArray","photoList","photoCreate","ImageInput","ImageField","MyUrlField","_ref$record","photoShow","uploadfile_MyUrlField","adminPostList","adminPostCreate","type","adminPostEdit","adminPostShow","username","loginProvider","params","AUTH_LOGIN","password","request","Request","method","body","JSON","stringify","headers","Headers","Content-Type","Error","statusText","res","localStorage","setItem","AUTH_LOGOUT","removeItem","console","log","getItem","AUTH_ERROR","reject","AUTH_CHECK","AUTH_GET_PERMISSIONS","role","addUploadFeature","requestHandler","jsonServerProvider","url","options","undefined","set","fetchUtils","fetchJson","FormData","image","append","rawFile","file","user","name","factory","market","amount","progress","axios","post","uploadCapableDataProvider","Resource","App","Admin","dataProvider","authProvider","permissions","list","edit","show","create","Boolean","location","hostname","match","ReactDOM","render","src_App","document","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbd08bc7.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Datagrid, TextField, EmailField } from 'react-admin';\n\n// export const UserList = props => (\n//     <List {...props}>\n//         <Datagrid rowClick=\"edit\">\n//             <TextField source=\"id\" />\n//             <TextField source=\"name\" />\n//             <TextField source=\"username\" />\n//             <EmailField source=\"email\" />\n//             <TextField source=\"phone\" />\n//             <TextField source=\"website\" />\n//         </Datagrid>\n//     </List>\n// );\nexport class UserList extends React.Component {\n\n\trender() {\n    return(\n      <List {...this.props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <TextField source=\"username\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"website\" />\n        </Datagrid>\n      </List>\n    );\n}\n}\n","import React from 'react';\nimport { Create, List, Datagrid, TextField, ReferenceField, EditButton, FunctionField } from 'react-admin';\nimport { Edit, SimpleForm, DisabledInput, ReferenceInput, SelectInput, TextInput, LongTextInput} from 'react-admin';\nimport { DeleteButton, UrlField, FileField, FileInput, Show, SimpleShowLayout, DateField, RichTextField } from 'react-admin';\n\nexport const PostList = props => (\n    <List title={<span>案件清單</span>} {...props}>\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"tag\" label=\"調查員代號\"/>\n            <TextField source=\"title\" label=\"調查員名稱\"/>\n            <TextField source=\"name\" label=\"審核人\"/>\n            <EditButton label=\"\"/>\n\t    <DeleteButton label=\"\"/>\n        </Datagrid>\n    </List>\n);\n\nexport const PostCreate = (props) => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput label=\"調查員代號\" source=\"id\"/>\n            <TextInput label=\"調查員名稱\" source=\"title\"/>\n            <TextInput label=\"審核人\" source=\"name\"/>\n            <TextInput label=\"審核人帳號\" source=\"user\"/>\n            <TextInput label=\"指標\" source=\"factory\"/>\n            <TextInput label=\"分類\" source=\"market\"/>\n            <TextInput label=\"數值\" source=\"amount\"/>\n            <TextInput label=\"案件進度\" source=\"progress\"/>\n            <FileInput source=\"file\" multiple label=\"書面資料\" accept=\"application/pdf\" >\n\t        <FileField source=\"file\" title=\"some data\"  />\n\t    </FileInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const PostEdit = props => (\n      <Edit {...props}>\n          <SimpleForm>\n             <TextInput disabled source=\"tag\" label=\"調查員代號\" />\n             <TextInput source=\"title\" label=\"調查員名稱\" />\n             <TextInput disabled source=\"date\" label=\"申請日期\" />\n             <TextInput label=\"審核人\" source=\"name\"/>\n             <TextInput disabled source=\"paperwork\" label=\"書面資料\" />\n             <TextInput source=\"factory\" label=\"指標\" />\n             <TextInput source=\"market\" label=\"分類\" />\n             <TextInput source=\"amount\" label=\"數值\" />\n          </SimpleForm>\n      </Edit>\n);\n\nexport class PostShow extends React.Component {\n  state = {\n    loading: true,\n    data: null\n  };\n\n  async componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/posts\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ data: data, loading: false });\n    // this.setState({ data: [{Id: \"002\", \"調查員代號\": \"BCSLC001\"}], loading: false });\n  }\n\n  PostTitle = ({ record }) => {\n        return <span><span>調查員代號: {record ? `${record.tag}` : ''}</span> <span>調查員名稱: {record ? `${record.title}` : ''}</span></span>;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    if (!this.state.data) {\n      return <div>didn't get a data</div>;\n    }\n    // Data\n    return (\n    <Show title={< this.PostTitle/>} {...this.props}>\n        <SimpleShowLayout>\n            <TextField label=\"調查員代號\" source=\"tag\"/>\n            <TextField label=\"調查員名稱\" source=\"title\"/>\n            <TextField label=\"審核人\" source=\"name\"/>\n            <TextField label=\"審核人帳號\" source=\"user\"/>\n            <TextField label=\"指標\" source=\"factory\"/>\n            <TextField label=\"分類\" source=\"market\"/>\n            <TextField label=\"申請日期\" source=\"date\"/>\n            <TextField label=\"數值\" source=\"amount\"/>\n            <TextField label=\"案件進度\" source=\"progress\"/>\n            <UrlField label=\"書面資料\" className=\"書面資料\" source=\"paperwork\" />\n            <ReferenceField label=\"區塊鏈資料\" source=\"id\" reference=\"bcpost\" linkType=\"show\">\n                <TextField source=\"imghash\" />\n            </ReferenceField>\n        </SimpleShowLayout>\n    </Show>\n);\n  }\n}\n","import React from 'react';\nimport { Create, List, Datagrid, TextField, ImageField, ReferenceField, EditButton, FunctionField } from 'react-admin';\nimport { ImageInput, Edit, SimpleForm, DisabledInput, ReferenceInput, SelectInput, TextInput, LongTextInput} from 'react-admin';\nimport { UrlField, Show, SimpleShowLayout, DateField, RichTextField ,ArrayField,ArrayInput,SimpleFormIterator} from 'react-admin';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport PropTypes from 'prop-types';\n\n\nexport const bcList = props => (\n    <List title={<span>區塊鏈資料</span>} {...props}>\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"tag\" label=\"調查員代號\"/>\n            <TextField source=\"name\" label=\"審核人\"/>\n            <TextField source=\"factory\" label=\"指標\"/>\n        </Datagrid>\n    </List>\n);\n\nexport const bcCreate = (props) => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"factory\" label=\"指標\"/>\n            <TextInput source=\"chain\" label=\"區塊鏈名稱\"/>\n            <ImageInput source=\"image\" label=\"Related pictures\" accept=\"image/*\">\n              <ImageField source=\"image\" title=\"title\" />\n            </ImageInput>\n        </SimpleForm>\n    </Create>\n);\n\nconst MyUrlField = ({ record = {}, source }) =>\n  <div>\n    <div> Transaction Hash </div>\n      <a className=\"Hey\" href={\"https://ropsten.etherscan.io/tx/\"+record.hash}>\n            {record[source]}\n    </a>\n</div>\n\nfunction populateList(imghashs,hashs) {\n    return imghashs.map((imghash,index) =>\n    <div key={imghash.toString()}><a href = {\"https://ropsten.etherscan.io/tx/\"+hashs[index]}  key={imghash.toString()}>\n        {imghash}\n    </a></div>\n);\n   \n}\n\nconst SimpleArray = ({source, record = {}}) =>\n  <div>\n      {\n          populateList(record[source],record[\"hash\"])\n      }\n  </div>;\n\n\nSimpleArray.defaultProps = {\n  addLabel: false,\n  label: 'List'\n};\n\n\nSimpleArray.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string\n};\n\nexport default SimpleArray;\n\nexport class bcShow extends React.Component {\n  constructor(props){\n    super(props);\n    this.Gethash=this.Gethash.bind(this);\n  }\n  state = {\n    loading: true,\n    data: null,\n    hash:false\n  };\n\n  Gethash() {\n    this.setState({hash:!this.state.hash});\n  }\n\n  async componentDidMount() {\n    const url = \"https://jsonplaceholder.typicode.com/posts\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ data: data, loading: false });\n    this.Gethash = this.Gethash.bind(this);\n  }\n\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\na(data, len, c) { \n\tvar f = [];\n\tfor (var i=0; i<len; i++) {\n\t\tvar h = data[\"hash\"][i]\n\t\tvar im = data[\"imghash\"][i]\n\t\tthis.b(h, im, c);\n\t};\n\t\n};\n\nb(h, im, c) {\n\tfetch(\"https://ropsten.etherscan.io/tx/\" + h).\n\tthen((response) => { \n\tif (response.status == 200) {\n\t\treturn response.text();}\n\telse if (response.status == 500) {\n\t\twindow.alert(\"Something Wrong!!\");\n\t\treturn;}\n\telse { window.alert(\"Server Error! Call Engineers!\");\n\t\treturn; }})\n\t.then((response) => {\n\tvar domparser = new DOMParser()\n\tvar doc = domparser.parseFromString(response, \"text/html\")\n\tvar hash = doc.getElementById(\"inputdata\").innerHTML.split(\"\\n\")[4].split(\" \")[2]\n\tif (hash == im) {\n\t\twindow.alert(\"Success: \" + im);\n\t\treturn;\n\t}\n\telse {\n\t\twindow.alert(\"Fail: \"+ im);\n\t\tc.failure = 1;\n\t\treturn;\n\t}\n\t}\n\t)\n};\n\n  PostTitle({ record }) {\n        return <span>{record ? `案件ID: ${record.id}` : ''}</span>;\n  };\n  PostShowActions = ({ basePath, data, resource }) => (\n    <CardActions style={this.cardActionStyle}>\n        <Button color=\"primary\" onClick={\n   async () => {\n\tif ( data[\"hash\"] == \"\") {\n\t\twindow.alert(\"No Hash Yet!!\");\n\t\treturn;\n\t}\n\telse {\n\t\tvar len = data[\"hash\"].length\n\t\tvar x = {'failure': 0};\n\t\t// for (var i=0; i<len; i++) {\n\t\t// \tvar h = data[\"hash\"][i]\n\t\t// \tvar im = data[\"imghash\"][i]\n// fetch(\"https://ropsten.etherscan.io/tx/\" + h).\n// \tthen((response) => { \n// \tif (response.status == 200) {\n// \t\treturn response.text();}\n// \telse if (response.status == 500) {\n// \t\twindow.alert(\"Something Wrong!!\");\n// \t\treturn;}\n// \telse { window.alert(\"Server Error! Call Engineers!\");\n// \t\treturn; }})\n// \t.then((response) => {\n// \tvar domparser = new DOMParser()\n// \tvar doc = domparser.parseFromString(response, \"text/html\")\n// \tvar hash = doc.getElementById(\"inputdata\").innerHTML.split(\"\\n\")[4].split(\" \")[2]\n// \tconsole.log(im)\n// \tif (hash == im) {\n// \t\t// window.alert(\"Success: \" + im);\n// \t\treturn;\n// \t}\n// \telse {\n// \t\twindow.alert(\"Fail: \"+ im);\n// \t\tx.failure = 1;\n// \t\treturn;\n// \t}\n// \t}\n// )\n\n\t\tawait this.a(data, len, x)\n\t// \t}\n\t\t// if (x.failure == 0) { window.alert(\"Success!!!\") }\n\t}\n}\n}>Check Hash</Button>\n    </CardActions>\n  );\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    if (!this.state.data) {\n      return <div>didn't get a data</div>;\n    }\n    // Data\n    return (\n    <Show  title={< this.PostTitle/>} {...this.props} actions={<this.PostShowActions />}>\n        <SimpleShowLayout>\n            <TextField source=\"tag\" label=\"調查員代號\"/>\n            <TextField source=\"name\" label=\"審核人\"/>\n            <TextField source=\"factory\" label=\"指標\"/>\n            <TextField source=\"date\" label=\"上鏈日期\"/>\n            <TextField source=\"chain\" label=\"區塊鏈名稱\"/>\n            <TextField label=\"照片 Hash\"/>\n            {this.state.hash ? <SimpleArray source=\"imghash\" label=\"照片 Hash\"></SimpleArray>:<div></div>}\n            {this.state.hash ? <button onClick={this.Gethash}>Close</button> : <button onClick={this.Gethash}>Open</button>}\n            <TextField source=\"lat\" label=\"緯度\"/>\n            <TextField source=\"long\" label=\"經度\"/>\n            <TextField source=\"dddh\" label=\"地段地號\"/>\n            <UrlField source=\"image\" label=\"照片\"/>\n        </SimpleShowLayout>\n    </Show>\n  );\n  }\n}\n","import React from 'react';\nimport { Create, List, Datagrid, TextField, ImageField, ReferenceField, EditButton, FunctionField } from 'react-admin';\nimport { ImageInput, Edit, SimpleForm, DisabledInput, ReferenceInput, SelectInput, TextInput, LongTextInput} from 'react-admin';\nimport { UrlField, Show, SimpleShowLayout, DateField, RichTextField } from 'react-admin';\nimport Button from '@material-ui/core/Button';\nimport { CardActions, ShowButton } from 'react-admin';\n\nexport const photoList = props => (\n    <List title={<span>區塊鏈資料</span>} {...props}>\n        <Datagrid rowClick=\"show\">\n            <TextField source=\"id\" label=\"ID\"/>\n        </Datagrid>\n    </List>\n);\n\nexport const photoCreate = (props) => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput source=\"id\" label=\"ID\"/>\n            <ImageInput source=\"image\" label=\"Related pictures\" accept=\"image/*\">\n              <ImageField source=\"image\" title=\"title\" />\n            </ImageInput>\n        </SimpleForm>\n    </Create>\n);\n\nconst MyUrlField = ({ record = {}, source }) =>\n  <div>\n    <div> CASE ID </div>\n      <a className=\"Hey\" href={\"https://ropsten.etherscan.io/tx/\"+record.hash}>\n            {record[source]}\n    </a>\n  </div>\n\nexport class photoShow extends React.Component {\n  state = {\n    loading: true,\n    data: null\n  };\n\n  async componentDidMount() {\n    const url = \"http://jsonplaceholder.typicode.com/posts\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ data: data, loading: false });\n    // this.setState({ data: [{Id: \"002\", \"調查員代號\": \"BCSLC001\"}], loading: false });\n  }\n\n  PostTitle({ record }) {\n        return <span>{record ? `案件ID: ${record.id}` : ''}</span>;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    if (!this.state.data) {\n      return <div>didn't get a data</div>;\n    }\n    // Data\n    return (\n    <Show title={< this.PostTitle/>} {...this.props}>\n        <SimpleShowLayout>\n            <MyUrlField source=\"hash\" label=\"交易Hash\"/>\n            <TextField source=\"factory\" label=\"指標\"/>\n            <TextField source=\"date\" label=\"上鏈日期\"/>\n            <TextField source=\"chain\" label=\"區塊鏈名稱\"/>\n            <TextField source=\"imghash\" label=\"照片 Hash\"/>\n            <ImageField source=\"image\" label=\"照片\"/>\n        </SimpleShowLayout>\n    </Show>\n  );\n  }\n}\n","import React from 'react';\nimport { List, Datagrid, TextField, ReferenceField, EditButton, FunctionField } from 'react-admin';\nimport { Edit, SimpleForm, DisabledInput, ReferenceInput, SelectInput, TextInput, LongTextInput} from 'react-admin';\nimport { DeleteButton, Create, Show, SimpleShowLayout, DateField, RichTextField } from 'react-admin';\n\nexport const adminPostList = props => (\n    <List title={<div>系統使用帳戶管理介面</div>} {...props}>\n        <Datagrid rowClick=\"show\">\n            <TextField label=\"帳號\" source=\"username\"/>\n            <TextField label=\"姓名\" source=\"name\" />\n            <TextField label=\"部門\" source=\"department\"/>\n            <TextField label=\"辦公室電話\" source=\"phone\"/>\n            <EditButton />\n            <DeleteButton />\n        </Datagrid>\n    </List>\n);\n\nexport const adminPostCreate = (props) => (\n    <Create {...props}>\n        <SimpleForm>\n            <TextInput label=\"帳號\" source=\"username\"/>\n            <TextInput label=\"密碼\" source=\"password\" type=\"password\"/>\n            <TextInput label=\"姓名\" source=\"name\" />\n            <TextInput label=\"部門\" source=\"department\"/>\n            <TextInput label=\"Email\" source=\"email\"/>\n            <TextInput label=\"辦公室電話\" source=\"phone\"/>\n            <TextInput label=\"身份\" source=\"identity\"/>\n        </SimpleForm>\n    </Create>\n);\n\nexport const adminPostEdit = props => (\n      <Edit title={<div>帳戶編輯</div>} {...props}>\n          <SimpleForm>\n            <TextInput disabled label=\"姓名\" source=\"name\" />\n            <TextInput disabled label=\"帳號\" source=\"username\"/>\n            <TextInput label=\"密碼\" source=\"password\" type=\"password\"/>\n            <TextInput label=\"部門\" source=\"department\"/>\n            <TextInput label=\"Email\" source=\"email\"/>\n            <TextInput label=\"辦公室電話\" source=\"phone\"/>\n            <TextInput label=\"身份\" source=\"identity\"/>\n          </SimpleForm>\n      </Edit>\n);\n\nexport class adminPostShow extends React.Component {\n  state = {\n    loading: true,\n    data: null\n  };\n\n  async componentDidMount() {\n    const url = \"http://jsonplaceholder.typicode.com/posts\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ data: data, loading: false });\n    // this.setState({ data: [{Id: \"002\", \"案件代號\": \"BCSLC001\"}], loading: false });\n  }\n  PostTitle = ({ record }) => {\n        return <span>User: {record ? `${record.username}` : ''}</span>;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    if (!this.state.data) {\n      return <div>didn't get a data</div>;\n    }\n    // Data\n    return (\n    <Show title={ <this.PostTitle /> }  {...this.props}>\n        <SimpleShowLayout>\n            <TextField label=\"帳號\" source=\"username\"/>\n            <TextField label=\"姓名\" source=\"name\" />\n            <TextField label=\"部門\" source=\"department\"/>\n            <TextField label=\"Email\" source=\"email\"/>\n            <TextField label=\"辦公室電話\" source=\"phone\"/>\n            <TextField label=\"身份\" source=\"identity\"/>\n        </SimpleShowLayout>\n    </Show>\n);\n  }\n}\n\n// export class PostShow extends React.Component {\n// \n//   render() {  // Data\n//   return(\n//       <Show {...this.props}>\n//           <SimpleShowLayout>\n//               <TextField source=\"title\" />\n//               <TextField source=\"id\" />\n//               <RichTextField source=\"body\" />\n//               <DateField label=\"Publication date\" source=\"created_at\" />\n//           </SimpleShowLayout>\n//       </Show>\n//   );}\n// };\n","import { AUTH_GET_PERMISSIONS, AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\n\nexport default (type, params) => {\n    // called when the user attempts to log in\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        const request = new Request('http://automl.dynu.net:8000/verifyuser', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        // if (username == 'admin') {\n        //   return localStorage.setItem('token', 'admin')\n        // }\n        // else {\n        //   return localStorage.setItem('token', 'user')\n        // }\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(( res ) => {\n                localStorage.setItem('token', res);\n            });\n    }\n    // called when the user clicks on the logout button\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('token');\n        console.log(localStorage.getItem('token'))\n        return Promise.resolve();\n    }\n    // called when the API returns an error\n    if (type === AUTH_ERROR) {\n        const { status } = params;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('token');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    // called when the user navigates to a new location\n    if (type === AUTH_CHECK) {\n        // var identity = localStorage.getItem('token')\n\t\t\t\t// return (identity === \"user\")\n        //    ? Promise.resolve()\n        //    : ()Promise.reject();\n         // console.log(identity)\n\t\t\t\treturn localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    }\n\n\t\tif (type === AUTH_GET_PERMISSIONS) {\n        const role = localStorage.getItem('token');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n    //}\n    return Promise.reject('Unknown method');\n};\n","import { Admin, Resource, fetchUtils } from 'react-admin';\nimport axios from 'axios'\nimport jsonServerProvider from 'ra-data-json-server';\nconst convertFileToBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.rawFile);\n\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n});\n\n/**\n * For posts update only, convert uploaded image in base 64 and attach it to\n * the `picture` sent property, with `src` and `title` attributes.\n */\nconst addUploadFeature = requestHandler => (type, resource, params) => {\n  console.log(requestHandler)\n    if ((type === 'CREATE' && resource === 'uploadfile') || (type === 'CREATE' && resource === 'post')) {\n        // notice that following condition can be true only when `<ImageInput source=\"pictures\" />` component has parameter `multiple={true}`\n        // if parameter `multiple` is false, then data.pictures is not an array, but single object\n\t\t\t\tconsole.log(params)\n        console.log(\"hiiiiiiiiiiiiiiiiiiiiii\")\n        // if (params.data.image) {\n            // only freshly dropped pictures are instance of File\n            // const formerPictures = params.data.pictures.filter(p => !(p.rawFile instanceof File));\n            // const newPictures = params.data.pictures.filter(p => p.rawFile instanceof File);\n            const httpClient = (url, options = {}) => {\n\t\t\t\t\t\t// if (!options.headers) {\n\t\t\t\t\t\t// \t\toptions.headers = new Headers({ Accept: 'application/json', credentials: 'include', 'content-type': 'application/json' });\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t// add your own headers here\n\t\t\t\t\t\t\t\toptions.headers = new Headers()\n\t\t\t\t\t\t\t\toptions.headers.set('Content-Type', 'multipart/form-data;boundary=----WebKitFormBoundaryyrV7KO0BoCBuDbTL');\n\t\t\t\t\t\t\t\treturn fetchUtils.fetchJson(url, options);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dataProvider = jsonServerProvider('http://automl.dynu.net:8000/', httpClient);\n\n\t\t\t\t\t\tconst data = new FormData();\n            if (typeof params.data.image !== 'undefined' ) {\n\t\t\t\t\t\tdata.append('id', params.data.id);\n\t\t\t\t\t\tdata.append('image', params.data.image.rawFile);\n\t\t\t\t\t\tconsole.log(params.data.image.rawFile)\n            }\n            else if (typeof params.data.file !== 'undefined') {\n            console.log('fileeeeeeeee')\n            console.log(params.data.file.length)\n\t    var i;\n\t    for (i=0; i<params.data.file.length; i++) {\n\t\t    data.append('file', params.data.file[i].rawFile);\n\t    }\n            data.append('tag', params.data.id);\n            data.append('title', params.data.title);\n            data.append('user', params.data.user);\n\t    data.append('name', params.data.name);\n            data.append('factory', params.data.factory);\n            data.append('market', params.data.market);\n            data.append('amount', params.data.amount);\n            data.append('progress', params.data.progress);\n            }\n\n            // fetch('http://localhost:8000/uploadfile', {\n            //         method: 'POST',\n            //         body: data,\n            //       }).then((response) => {\n            //               response.json().then((body) => {\n            //                         this.setState({ imageURL: `http://localhost:8000/${body.file}` });\n            //                       });\n            //             });\n\t\t\t\t\t\t// return (type, resource, params) =>\n\t\t\t\t\t\treturn axios.post('http://automl.dynu.net:8000/'+resource, data)\n\t\t\t\t\t// \t\taxios({\n\t\t\t\t\t// \t\turl: 'https://localhost:8000'+source,\n\t\t\t\t\t// \t\tmethod: 'post',\n\t\t\t\t\t// \t\tdata: {\n\t\t\t\t\t// \t\t\tfile,\n\t\t\t\t\t// \t\t\tname: meta.name,      \n\t\t\t\t\t// \t\t},\n\t\t\t\t\t// \t})\n            // return dataProvider(type, resource, {\n            //         ...params,\n            //         data: {\n\t\t\t\t\t\t// \t\t\t\t\t\t...data,\n            //             ...params.data,\n            //         },\n            //     });\n        // }\n    }\n    // for other request types and resources, fall back to the default request handler\n    return requestHandler(type, resource, params);\n};\n\nexport default addUploadFeature;\n","import React from 'react';\nimport { Admin, Resource, fetchUtils } from 'react-admin';\nimport { UserList } from './users';\nimport { PostList, PostEdit, PostShow, PostCreate} from './posts';\nimport { bcList, bcShow, bcCreate } from './blockchain/bcpost';\nimport { photoList, photoShow, photoCreate } from './blockchain/uploadfile';\nimport { adminPostShow, adminPostList, adminPostEdit, adminPostCreate } from './admin/posts';\nimport loginProvider from './loginProvider';\nimport jsonServerProvider from 'ra-data-json-server';\nimport addUploadFeature from './addUploadFeature';\n\n\nconst userResources = [\n\t\t<Resource name=\"post\" options={{ label: \"案件清單\" }} list={PostList} edit={PostEdit} show={PostShow} create={PostCreate}/>,\n\t\t<Resource name=\"bcpost\" options={{ label: \"區塊鏈資料\" }} list={bcList} show={bcShow} />,\n];\n\nconst adminResources = [\n\t\t<Resource name=\"user\" options={{ label: \"權限管理\" }} list={adminPostList} edit={adminPostEdit} show={adminPostShow}/>,\n];\n\nconst selectResources = () => {\n\t\tif (localStorage.getItem('token') === 'admin') {\n        console.log(localStorage.getItem('token'))\n\t\t\t\treturn adminResources\n\t\t}\n\t\telse {\n        console.log(localStorage.getItem('token'))\n\t\t\t\treturn userResources\n\t\t}\n}\n\nconst httpClient = (url, options = {}) => {\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json', credentials: 'include', 'content-type': 'application/json' });\n    }\n    const token = localStorage.getItem('token');\n    options.headers.set('Authorization', `Bearer ${token}`);\n    return fetchUtils.fetchJson(url, options);\n}\n\n// const dataProvider = jsonServerProvider('http://jsonplaceholder.typicode.com');\nconst dataProvider = jsonServerProvider('http://automl.dynu.net:8000');\nconst uploadCapableDataProvider = addUploadFeature(dataProvider);\n\nconst App = () => (\n  <Admin dataProvider={uploadCapableDataProvider} authProvider={loginProvider}>\n  {permissions => [\n        // Restrict access to the edit and remove views to admin only\n       permissions === 'admin' || permissions === 'user' ?\n\t\t[<Resource name=\"post\" options={{ label: \"案件清單\" }} list={PostList} edit={PostEdit} show={PostShow} create={PostCreate}/>,\n\t\t<Resource name=\"bcpost\" options={{ label: \"區塊鏈資料\" }} list={bcList} show={bcShow} />]\n    : <Resource name=\"uploadfile\" options={{ label: \"用戶上傳區\" }} list={photoList} show={photoShow} create={photoCreate}/>,\n        // Only include the categories resource for admin users\n        permissions === 'admin'\n\t\t? <Resource name=\"user\" options={{ label: \"權限管理\" }} list={adminPostList} edit={adminPostEdit} show={adminPostShow} create={adminPostCreate}/>\n            : null,\n    ]}\n\t</Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}